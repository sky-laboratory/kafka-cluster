# Reference: https://github.com/deviantony/docker-elk.git

version: '3.7'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: changeme
      ELASTIC_USERNAME: elastic
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
      build:
        context: logstash/
        args:
          ELASTIC_VERSION: ${ELASTIC_VERSION}
      volumes:
        - type: bind
          source: ./logstash/config/logstash.yml
          target: /usr/share/logstash/config/logstash.yml
          read_only: true
        - type: bind
          source: ./logstash/pipeline/
          target: /usr/share/logstash/pipeline/
          read_only: true

      ports:
        - 5044:5044
        - 50000:50000/tcp
        - 50000:50000/udp
        - 9600:9600
      environment:
        LS_JAVA_OPTS: -Xms256m -Xmx256m
      depends_on:
        - elasticsearch
        - kafka-1
        - kafka-2
        - kafka-3

  kibana:
      build:
        context: kibana/
        args:
          ELASTIC_VERSION: ${ELASTIC_VERSION}
      volumes:
        - type: bind
          source: ./kibana/config/kibana.yml
          target: /usr/share/kibana/config/kibana.yml
          read_only: true
      ports:
        - 5601:5601
      depends_on:
        - elasticsearch

  zookeeper-1:
      hostname: zookeeper1
      image: confluentinc/cp-zookeeper:6.2.0
      environment:
        ZOOKEEPER_SERVER_ID: 1
        ZOOKEEPER_CLIENT_PORT: 12181
        ZOOKEEPER_DATA_DIR: /zookeeper/data
        ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
      ports:
        - 12181:12181
        - 22888:22888
        - 23888:23888
      volumes:
        - ./zookeeper/data/1:/zookeeper/data

  zookeeper-2:
      hostname: zookeeper2
      image: confluentinc/cp-zookeeper:6.2.0
      environment:
        ZOOKEEPER_SERVER_ID: 2
        ZOOKEEPER_CLIENT_PORT: 22181
        ZOOKEEPER_DATA_DIR: /zookeeper/data
        ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
      ports:
        - 22181:22181
        - 32888:32888
        - 33888:33888
      volumes:
        - ./zookeeper/data/2:/zookeeper/data

  zookeeper-3:
      hostname: zookeeper3
      image: confluentinc/cp-zookeeper:6.2.0
      environment:
        ZOOKEEPER_SERVER_ID: 3
        ZOOKEEPER_CLIENT_PORT: 32181
        ZOOKEEPER_DATA_DIR: /zookeeper/data
        ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
      ports:
        - 32181:32181
        - 42888:42888
        - 43888:43888
      volumes:
        - ./zookeeper/data/3:/zookeeper/data

  kafka-1:
      image: confluentinc/cp-kafka:6.2.0
      hostname: kafka1
      depends_on:
        - zookeeper-1
        - zookeeper-2
        - zookeeper-3
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper1:12181,zookeeper2:22181,zookeeper3:32181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19092
        KAFKA_LOG_DIRS: /kafka
      ports:
        - 19092:19092
      volumes:
        - ./kafka/logs/1:/kafka

  kafka-2:
      image: confluentinc/cp-kafka:6.2.0
      hostname: kafka2
      depends_on:
        - zookeeper-1
        - zookeeper-2
        - zookeeper-3
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: zookeeper1:12181,zookeeper2:22181,zookeeper3:32181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092
        KAFKA_LOG_DIRS: /kafka
      ports:
        - 29092:29092
      volumes:
        - ./kafka/logs/2:/kafka

  kafka-3:
      image: confluentinc/cp-kafka:6.2.0
      hostname: kafka3
      depends_on:
        - zookeeper-1
        - zookeeper-2
        - zookeeper-3
      environment:
        KAFKA_BROKER_ID: 3
        KAFKA_ZOOKEEPER_CONNECT: zookeeper1:12181,zookeeper2:22181,zookeeper3:32181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:39092
        KAFKA_LOG_DIRS: /kafka
      ports:
        - 39092:39092
      volumes:
        - ./kafka/logs/3:/kafka

  akhq:
      image: tchiotludo/akhq:latest
      hostname: akhq
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
      environment:
        AKHQ_CONFIGURATION: |
          akhq:
            connections:
              kafka:
                properties:
                  bootstrap.servers: kafka1:19092,kafka2:29092,kafka3:39092
      ports:
        - 8080:8080

volumes:
    elasticsearch:
